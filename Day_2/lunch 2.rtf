{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720

\f0\b\fs24 \cf0 *** DAY 2 - LUNCH EXERCISE ***
\b0 \
\
Explore .SAM file generated during last night's homework (accepted_hits.sam?)
\b \
\
Basic Exercises
\b0 \
\
NOTE: place all your Python code into a file and add it to your Github repository\
\
1. Count number of alignments\
\'a0 - HINT: counter variable\
\
2. Count number of alignments that match perfectly to the genome\
\'a0 - HINT: google sam format optional fields\
\
3. Count number of reads that map to exactly one location in the genome\
\'a0 - HINT: number of hits\
\
4. Extract just the column indicating which chromosome read aligns too\
\'a0 - HINT: .split()\
\
5. Calculate how many alignments are on chromosome 2L 2R 3L 3R 4 X (keep track separately)\
\'a0 - HINT: make individual counter variables (or a list)\
\
6. Calculate average MAPQ score\
\'a0 - HINT: counter and total variables\
\
7. Count number of reads that start their alignment on chromosome 2L between base 10000 and 20000 (inclusive)\
\'a0 - HINT: and\
\
\
\

\b Advanced Exercises
\b0 \
\
1. Find position at which the most reads start their alignment\
\'a0 - HINT 1: Python version of `cut -f3,4 accepted_hits.sam | sort | uniq -c | sort -n`\
\'a0 - HINT 2: google for python "uniq -c"\
\
2. How many reads map to the reverse strand?\
\'a0 - HINT 1: sam flag 0x10 bit\
\'a0 - HINT 2: stackoverflow.com/questions/2591483/getting-a-specific-bit-value-in-a-byte-string\
\
3. Determine how many reads have an average quality score >30\
\'a0 - HINT 1: fastq wiki phred+33\
\'a0 - HINT 2: stackoverflow.com/questions/227459/ascii-value-of-a-character-in-python}